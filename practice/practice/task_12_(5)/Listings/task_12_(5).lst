C51 COMPILER V9.60.7.0   TASK_12__5_                                                       04/25/2024 10:28:42 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TASK_12__5_
OBJECT MODULE PLACED IN .\Objects\task_12_(5).obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE task_12_(5).c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\task_12_(5).lst) TABS(2) OBJECT(.\Objects\task_12_(5).obj)

line level    source

   1          
   2          //  #include <reg52.h>
   3          
   4          //  //#define LED P0
   5          //  //sbit led1 = P2^0;
   6          
   7          
   8          //  // declaring pins for 74HC138-decoder/demultiplexer IC (used for blinking specific `7-segment` display 
             -seperately)
   9          //  sbit pin1 = P2^2;
  10          //  sbit pin2 = P2^3;
  11          //  sbit pin3 = P2^4;
  12          //  unsigned int x = 0;
  13          
  14          
  15          //  void timer0(void) interrupt 1{
  16          //      x++;
  17          //    
  18          //      // display__0
  19          //      if (x==1){
  20          //      pin1 = 0;
  21          //      pin2 = 0;
  22          //      pin3 = 0;
  23          //  //    LED = 0xFF;
  24          //  //    led1 = ~led1;
  25          //      }
  26          //        
  27          //      if (x==2){
  28          //      //  display__1
  29          //      pin1 = 1;
  30          //      pin2 = 0;
  31          //      pin3 = 0;
  32          //  //    LED = 0xFF;
  33          //      }
  34          //      
  35          //      if (x==3){
  36          //      //  display__2
  37          //      pin1 = 0;
  38          //      pin2 = 1;
  39          //      pin3 = 0;
  40          //  //    LED = 0xFF;
  41          //      }
  42          //      
  43          //      if (x==4){
  44          //      //  display__3
  45          //      pin1 = 1;
  46          //      pin2 = 1;
  47          //      pin3 = 0;
  48          //  //    LED = 0xFF;
  49          //      }
  50          //      
  51          //      if (x==5){
  52          //      //  display__4
  53          //      pin1 = 0;
C51 COMPILER V9.60.7.0   TASK_12__5_                                                       04/25/2024 10:28:42 PAGE 2   

  54          //      pin2 = 0;
  55          //      pin3 = 1;
  56          //  //    LED = 0xFF;
  57          //      }
  58          //      
  59          //      if (x==6){
  60          //      //  display__5
  61          //      pin1 = 1;
  62          //      pin2 = 0;
  63          //      pin3 = 1;
  64          //  //    LED = 0xFF;
  65          //      }
  66          //      
  67          //      if (x==7){
  68          //      //  display__6
  69          //      pin1 = 0;
  70          //      pin2 = 1;
  71          //      pin3 = 1;
  72          //  //    LED = 0xFF;
  73          //      }
  74          //      
  75          //      if (x==8){
  76          //      //  display__7
  77          //      pin1 = 1;
  78          //      pin2 = 1;
  79          //      pin3 = 1;
  80          //  //    LED = 0xFF;
  81          //      x=0;
  82          //      }
  83          //  }
  84          
  85          
  86          
  87          //  void main(){
  88          //     TMOD = 0x02; // 8-bit auto-reload mode
  89          //  //   TL0=0xFD;
  90          //     TH0=0x4B;
  91          //     IE = 0x82;
  92          //     TR0=1;
  93          //  //   while (TF0==0);
  94          //  //   TR0=1;
  95          //  //   TF0=1;
  96          //    
  97          //    while (1){
  98          //    // ..
  99          //    }
 100          //  }
 101          
 102          //   
 103          
 104          
 105          
 106          
 107          
 108          
 109          
 110          
 111          
 112          
 113          
 114          
 115          
C51 COMPILER V9.60.7.0   TASK_12__5_                                                       04/25/2024 10:28:42 PAGE 3   

 116          
 117          
 118          
 119          
 120          
 121          
 122          
 123          
 124          //#include <reg52.h>
 125          //sbit LED = P2^2;
 126          //unsigned int x = 0;
 127          
 128          //void timer0(void) interrupt 1{
 129          //    LED = ~LED;
 130          //    x=0;
 131          
 132          //}
 133          
 134          //void main(){
 135          //   TMOD = 0x01; // 16-bit non_auto-reload mode
 136          //   TL0=0xDB;
 137          //   TH0=0xFF;
 138          //   IE = 0x82;
 139          //   TR0=1;
 140          //      IE0 =1;
 141          //  IT0 = 1;
 142          //  //  while (TF0==0);
 143          //  //TF0=0;
 144          //  while (1){
 145          //  // ..
 146          //  }
 147          //}
 148          
 149          // 
 150          
 151          
 152          
 153          
 154          
 155          
 156          
 157          
 158          
 159          
 160          
 161          #include <reg52.h>
 162          
 163          // Define LED pin
 164          sbit LED = P2^0;
 165          
 166          // Function to initialize Timer 0 for interrupt every 10 ms
 167          void timer0_init() {
 168   1          // Set Timer 0 in 16-bit mode
 169   1          TMOD |= 0x01; // Timer 0, Mode 1 (16-bit timer)
 170   1          
 171   1          // Calculate reload value for 10 ms delay
 172   1          // Crystal frequency: 11.0592 MHz
 173   1          // Timer 0 operates at 1/12th of crystal frequency
 174   1          // Timer 0 interrupt frequency = (Crystal frequency / 12) / (65536 - Reload value)
 175   1          // We need 10 ms delay, so (11.0592e6 / 12) / (65536 - Reload value) = 100 Hz
 176   1          // Reload value = 65536 - (11.0592e6 / 12 / 1000 * 10)
 177   1          // Reload value = 65536 - 921.6 ˜ 64615
C51 COMPILER V9.60.7.0   TASK_12__5_                                                       04/25/2024 10:28:42 PAGE 4   

 178   1          TH0 = 0xFC; // High byte
 179   1          TL0 = 0x67; // Low byte
 180   1          
 181   1          // Enable Timer 0 interrupt
 182   1          ET0 = 1;
 183   1          
 184   1          // Start Timer 0
 185   1          TR0 = 1;
 186   1      }
 187          
 188          // Timer 0 interrupt service routine
 189          void timer0_isr() interrupt 1 {
 190   1          // Toggle LED
 191   1          LED = !LED;
 192   1      }
 193          
 194          void main() {
 195   1          // Initialize Timer 0
 196   1          timer0_init();
 197   1          
 198   1          // Enable global interrupts
 199   1          EA = 1;
 200   1          
 201   1          while(1) {
 202   2              // Main program loop
 203   2          }
 204   1      }
 205          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     24    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
