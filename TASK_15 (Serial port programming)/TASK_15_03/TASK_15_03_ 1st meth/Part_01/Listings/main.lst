C51 COMPILER V9.60.7.0   MAIN                                                              09/23/2024 10:43:25 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          //      /*
   3          //      Sending character/text from PC to Microcontroller
   4          //      */
   5          
   6          
   7          //  #include <reg51.h>
   8          
   9          //  void UART_Init() {
  10          //      TMOD = 0x20;    /* Timer 1, 8-bit auto reload mode */
  11          //      TH1 = 0xFD;     /* Load value for 9600 baud rate */
  12          //      SCON = 0x50;    /* Mode 1, 8-bit data, reception enable */
  13          //      TR1 = 1;        /* Start timer 1 */
  14          //  }
  15          
  16          //  void Transmit_data(char tx_data) {
  17          //      SBUF = tx_data;    /* Load char in SBUF register */
  18          //      while (TI == 0);   /* Wait until stop bit transmit */
  19          //      TI = 0;            /* Clear TI flag */
  20          //  }
  21          
  22          //  void main() {
  23          //      char received_char;
  24          //      UART_Init();    /* UART initialize function */
  25          
  26          //      while (1) {
  27          //          if (RI) {  /* Check if data received */
  28          //              received_char = SBUF;  /* Read the received character */
  29          //              RI = 0;  /* Clear the receive interrupt flag */
  30          
  31          //              if (received_char == '\r') { /* Check if carriage return received */
  32          //                  /* Message terminated, do something with the received message */
  33          //                  // For now, let's just echo the received message back to PC
  34          //                  Transmit_data('\r');  /* Send carriage return to PC */
  35          //                  Transmit_data('\n');  /* Send newline to PC */
  36          //              } else {
  37          //                  /* Received character, do something with it */
  38          //                  Transmit_data(received_char);  /* Echo the received character back to PC */
  39          //              }
  40          //          }
  41          //      }
  42          //  }
  43          
  44          
  45          
  46          
  47          
  48          
  49          
  50          //--------------------------------------------------------------------------------------------------------
             ----------------------------------------------------------------------------------
  51          
  52          
  53          
C51 COMPILER V9.60.7.0   MAIN                                                              09/23/2024 10:43:25 PAGE 2   

  54          
  55          
  56          
  57          ////    // Sending character/text from PC to Microcontroller
  58          
  59          //#include <reg51.h>
  60          
  61          //void UART_Init() {
  62          //    TMOD = 0x20;    /* Timer 1, 8-bit auto reload mode */
  63          //    TH1 = 0xFD;     /* Load value for 9600 baud rate */
  64          //    SCON = 0x50;    /* Mode 1, 8-bit data, reception enable */
  65          //    TR1 = 1;        /* Start timer 1 */
  66          //}
  67          
  68          //void Transmit_data(char tx_data) {
  69          //    SBUF = tx_data;    /* Load char in SBUF register */
  70          //    while (TI == 0);   /* Wait until stop bit transmit */
  71          //    TI = 0;            /* Clear TI flag */
  72          //}
  73          
  74          //void main() {
  75          //    char received_char;
  76          //    char message_buffer[100];
  77          //    int index = 0;
  78          //    int i;  // Declare loop variable outside the for loop
  79          
  80          //    UART_Init();    /* UART initialize function */
  81          
  82          //    while (1) {
  83          //        if (RI) {  /* Check if data received */
  84          //            received_char = SBUF;  /* Read the received character */
  85          //            RI = 0;  /* Clear the receive interrupt flag */
  86          
  87          //            if (received_char == '\n') {
  88          //                message_buffer[index++] = received_char;  /* Store received character in buffer */
  89          //            } else if (received_char == '\r') {
  90          //                message_buffer[index] = '\0';  /* Terminate the message string */
  91          
  92          //                /* Message terminated, do something with the received message */
  93          //                /* For now, let's just echo the received message back to PC */
  94          //                for (i = 0; i < index; i++) {
  95          //                    Transmit_data(message_buffer[i]);  /* Echo each character */
  96          //                }
  97          //                Transmit_data('\r');  /* Send carriage return to PC */
  98          //                Transmit_data('\n');  /* Send newline to PC */
  99          
 100          //                index = 0;  /* Reset buffer index for next message */
 101          //            } else {
 102          //                message_buffer[index++] = received_char;  /* Store received character in buffer */
 103          //            }
 104          //        }
 105          //    }
 106          //}
 107          
 108          
 109          
 110          
 111          
 112          
 113          
 114          
 115          
C51 COMPILER V9.60.7.0   MAIN                                                              09/23/2024 10:43:25 PAGE 3   

 116          
 117          
 118          
 119          
 120          
 121          
 122          
 123          
 124          
 125          
 126          
 127          // -------------------------------------------------------------------------------------------------------
             ------------------------------------------------------------------------------------------------------------------
 128          
 129          
 130          
 131          
 132          
 133          
 134          #include<reg51.h>
 135          #include<stdio.h>
 136          #include <stdio.h>
 137          #include <string.h>
 138          
 139          #define LCD_Port P0       /* P2 port as data_port */
 140          sbit rs=P2^6;             /* Register select pin */
 141          sbit rw=P2^5;             /* Read/Write pin */
 142          sbit en=P2^7;             /* Enable pin */
 143          unsigned char i;
 144          unsigned char k;
 145          char Mystring[];
 146          char string[15 + 1];
 147          
 148          
 149          void delay(unsigned int count)          /* Function to provide delay Approx 1ms with 12 Mhz crystal*/
 150          {
 151   1           int i,j;
 152   1           for(i=0;i<count;i++)
 153   1           for(j=0;j<114;j++);
 154   1      }
 155          
 156          void LCD_Cmd (char f)                   /* LCD16x2 command funtion */
 157          {
 158   1        LCD_Port = f; /* Send upper nibble */
 159   1        rs=0;                                         /* Command reg. */
 160   1        rw=0;                                         /* Write operation */
 161   1        en=1; 
 162   1        delay(1);
 163   1        en=0;
 164   1        delay(2);
 165   1      }
 166          
 167          void LCD_dat (char d)                     /*  LCD_data write function */
 168          {
 169   1      
 170   1        LCD_Port  = d;/*  Send upper nibble */
 171   1        rs=1;                                             /*  Data reg.*/
 172   1        rw=0;                                             /*Write operation*/
 173   1        en=1;  
 174   1        delay(1);
 175   1        en=0;
 176   1        delay(2);
C51 COMPILER V9.60.7.0   MAIN                                                              09/23/2024 10:43:25 PAGE 4   

 177   1      }
 178          
 179          void LCD_String (char *str)         /* Send string to LCD function */
 180          {
 181   1        int i;
 182   1        for(i=0;str[i]!=0;i++)            /* Send each character of string till the NULL */
 183   1        {
 184   2          LCD_dat (str[i]);               /* Call LCD_data write */
 185   2        }
 186   1      }
 187          
 188          //void LCD_String_xy (char row, char pos, char *str)  /* Send string to LCD function */
 189          //{
 190          //  if (row == 0)
 191          //  LCD_Cmd((pos & 0x0F)|0x80);
 192          //  else if (row == 1)
 193          //  LCD_Cmd((pos & 0x0F)|0xC0);
 194          //  LCD_String(str);                                  /* Call LCD string function */
 195          //}
 196          
 197          void LCD_Init (void)                /* LCD Initialize function */
 198          { 
 199   1        delay(20);    /* LCD Power ON Initialization time >15ms */
 200   1        LCD_Cmd (0x38); /* Initialization of 16X2 LCD in 8bit mode */
 201   1        LCD_Cmd (0x0C); /* Display ON Cursor OFF */
 202   1        LCD_Cmd (0x06); /* Auto Increment cursor */
 203   1        LCD_Cmd (0x01); /* clear display */
 204   1        LCD_Cmd (0x80); /* cursor at home position */
 205   1      }
 206          
 207          void cnvrt_array_int_string(char charArray[]){
 208   1        // Convert the character array into a string by adding a null terminator
 209   1          strncpy(string, charArray, 15);
 210   1          string[16] = '\0';  // Null-terminate the string
 211   1      }
 212          
 213          void main()
 214          {
 215   1      LCD_Init(); 
 216   1      
 217   1        TMOD=0x20;
 218   1        TH1=0xFD; 
 219   1        SCON=0x50;
 220   1        PCON=0x00;
 221   1        TR1=1;
 222   1        while(1)
 223   1        {
 224   2        for(i=0;i<16;i++)
 225   2          { 
 226   3            while(RI==0);
 227   3            RI = 0;
 228   3            Mystring[i] = SBUF;
 229   3          }
 230   2           cnvrt_array_int_string(Mystring);
 231   2          LCD_String(string);
 232   2      //    LCD_String("abdullah");
 233   2      }
 234   1      }
 235          
 236          
 237          
 238          
C51 COMPILER V9.60.7.0   MAIN                                                              09/23/2024 10:43:25 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    231    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
