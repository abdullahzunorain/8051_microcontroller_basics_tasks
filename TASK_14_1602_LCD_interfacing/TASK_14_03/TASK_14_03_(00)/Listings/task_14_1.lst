C51 COMPILER V9.60.7.0   TASK_14_1                                                         09/20/2024 16:30:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TASK_14_1
OBJECT MODULE PLACED IN .\Objects\task_14_1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE task_14_1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\task_14_1.lst) TABS(2) OBJECT(.\Objects\task_14_1.obj)

line level    source

   1          ////////////////#include <reg51.h>
   2          
   3          ////////////////// Define the data port for the LCD
   4          ////////////////#define lcd_data P0
   5          
   6          ////////////////// Define control pins for the LCD
   7          ////////////////sbit rs = P2^6;  // Register select pin
   8          ////////////////sbit rw = P2^5;  // Read/Write pin
   9          ////////////////sbit en = P2^7;  // Enable pin
  10          
  11          ////////////////// Function prototypes
  12          ////////////////void lcd_init();           // Initialize the LCD
  13          ////////////////void cmd(unsigned char a); // Send command to the LCD
  14          ////////////////void dat(unsigned char b); // Send data to the LCD
  15          ////////////////void show(unsigned char *s); // Display a string on the LCD
  16          ////////////////void lcd_delay();         // Delay function for LCD
  17          
  18          ////////////////// Function to initialize the LCD
  19          ////////////////void lcd_init()
  20          ////////////////{
  21          ////////////////    cmd(0x38); // Initialize the LCD in 8-bit mode, 2 lines, 5x7 matrix
  22          ////////////////    cmd(0x0e); // Display ON, cursor ON
  23          ////////////////    cmd(0x01); // Clear display screen
  24          ////////////////    cmd(0x06); // Entry mode, auto increment with no shift
  25          ////////////////    cmd(0x0c); // Display ON, cursor OFF
  26          ////////////////    cmd(0x80); // Set cursor position to the beginning of the first line
  27          ////////////////}
  28          
  29          ////////////////// Function to send a command to the LCD
  30          ////////////////void cmd(unsigned char a)
  31          ////////////////{
  32          ////////////////    lcd_data = a; // Send command to data port
  33          ////////////////    rs = 0;       // Select command register
  34          ////////////////    rw = 0;       // Write operation
  35          ////////////////    en = 1;       // Generate enable pulse
  36          ////////////////    lcd_delay();  // Wait for the command to be processed
  37          ////////////////    en = 0;       // End enable pulse
  38          ////////////////}
  39          
  40          ////////////////// Function to send data to the LCD
  41          ////////////////void dat(unsigned char b)
  42          ////////////////{
  43          ////////////////    lcd_data = b; // Send data to data port
  44          ////////////////    rs = 1;       // Select data register
  45          ////////////////    rw = 0;       // Write operation
  46          ////////////////    en = 1;       // Generate enable pulse
  47          ////////////////    lcd_delay();  // Wait for the data to be processed
  48          ////////////////    en = 0;       // End enable pulse
  49          ////////////////}
  50          
  51          ////////////////// Function to display a string on the LCD
  52          ////////////////void show(unsigned char *s)
  53          ////////////////{
  54          ////////////////    while(*s) {   // Loop until the end of the string
C51 COMPILER V9.60.7.0   TASK_14_1                                                         09/20/2024 16:30:26 PAGE 2   

  55          ////////////////        dat(*s++); // Send each character to the LCD
  56          ////////////////    }
  57          ////////////////}
  58          
  59          ////////////////// Delay function for LCD timing
  60          ////////////////void lcd_delay()
  61          ////////////////{
  62          ////////////////    unsigned int lcd_delay;
  63          ////////////////    for(lcd_delay = 0; lcd_delay <= 6000; lcd_delay++); // Simple delay loop
  64          ////////////////}
  65          
  66          ////////////////int main()
  67          ////////////////{
  68          ////////////////    unsigned int j;
  69          ////////////////    lcd_init(); // Initialize the LCD
  70          ////////////////    while(1) {
  71          ////////////////        cmd(0x80); // Set cursor position to the beginning of the first line
  72          ////////////////        show("   Welcome To   "); // Display the first line
  73          ////////////////        cmd(0xc0); // Set cursor position to the beginning of the second line
  74          ////////////////        show(" EMBETRONICX.COM"); // Display the second line
  75          ////////////////        for(j = 0; j < 30000; j++); // Delay to keep the message on the screen
  76          ////////////////        cmd(0x01); // Clear the display
  77          ////////////////        for(j = 0; j < 30000; j++); // Delay before the next iteration
  78          ////////////////    }
  79          ////////////////}
  80          
  81          
  82          
  83          
  84          
  85          
  86          
  87          
  88          
  89          
  90          
  91          
  92          #include <reg51.h>
  93          
  94          sbit rs = P2^6;
  95          sbit rw = P2^5;
  96          sbit en = P2^7;
  97          
  98          #define text P0
  99          
 100          void delay() {
 101   1          int i, j;
 102   1          for(i = 0; i < 100; i++) {
 103   2              for (j = 0; j < 100; j++);
 104   2          }
 105   1      }
 106          
 107          // Add lcd_delay function prototype
 108          void lcd_delay();
 109          
 110          // Define lcd_delay function
 111          void lcd_delay() {
 112   1          delay();
 113   1      }
 114          
 115          void lcd_cmd(unsigned char a) {
 116   1          text = a;
C51 COMPILER V9.60.7.0   TASK_14_1                                                         09/20/2024 16:30:26 PAGE 3   

 117   1          rs = 0;
 118   1          rw = 0;
 119   1          en = 1;
 120   1          lcd_delay();
 121   1          en = 0;
 122   1      }
 123          
 124          void lcd_data(unsigned char b) {
 125   1          text = b;
 126   1          rs = 1;
 127   1          rw = 0;
 128   1          en = 1;
 129   1          lcd_delay();
 130   1          en = 0;
 131   1      }
 132          
 133          void lcd_init() {
 134   1          lcd_cmd(0x01);
 135   1          delay();
 136   1          lcd_cmd(0x38);
 137   1          delay();
 138   1          lcd_cmd(0x0E);
 139   1          delay();
 140   1          lcd_cmd(0x10);
 141   1          delay();
 142   1          lcd_cmd(0x80);
 143   1          delay();
 144   1      }
 145          
 146          int main() {
 147   1          text = 0x00;
 148   1          lcd_init();
 149   1          
 150   1          lcd_data('A');
 151   1          delay();
 152   1      
 153   1          lcd_data('B');
 154   1          delay();
 155   1      
 156   1          lcd_data('D');
 157   1          delay();    
 158   1          
 159   1          lcd_data('U');
 160   1          delay();
 161   1          lcd_data('L');
 162   1          delay();   
 163   1      
 164   1          lcd_data('L');
 165   1          delay();
 166   1          
 167   1          lcd_data('A');
 168   1          delay();    
 169   1      
 170   1          lcd_data('H');
 171   1          delay();    
 172   1          
 173   1      //    lcd_data('H');
 174   1      //    delay();    
 175   1      //    
 176   1      //    lcd_data('A');
 177   1      //    delay();    
 178   1      //    
C51 COMPILER V9.60.7.0   TASK_14_1                                                         09/20/2024 16:30:26 PAGE 4   

 179   1      //    lcd_data('N');
 180   1      //    delay();    
 181   1      //    
 182   1      //    lcd_data('*');
 183   1      //    delay();
 184   1      //    
 185   1          // Return statement for main function
 186   1          return 0;        
 187   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    169    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
